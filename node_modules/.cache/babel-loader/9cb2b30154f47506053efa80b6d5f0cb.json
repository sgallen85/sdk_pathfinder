{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sallen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sallen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var SDK_VERSION='3.2';/**\n * Gets a reference to the SDK. Use this if you want to do SDK stuff.\n * @param {string | HTMLIFrameElement} elementId ID of the iframe or the iframe element itself\n * @param {string} applicationKey Your API key \n * @returns Promise of MpSdk reference\n */export var GetSDK=function GetSDK(elementId,applicationKey){return new Promise(function(resolve,reject){var checkIframe=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var iframe,sdkWindow,sdk;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:iframe=null;if(elementId instanceof HTMLIFrameElement){iframe=elementId;}else{iframe=document.getElementById(elementId);}if(!iframe){_context.next=7;break;}_context.next=5;return iframe.contentWindow;case 5:sdkWindow=_context.sent.MP_SDK;if(sdkWindow){clearInterval(intervalId);sdk=sdkWindow.connect(iframe,applicationKey,SDK_VERSION);resolve(sdk);}case 7:case\"end\":return _context.stop();}}},_callee);}));return function checkIframe(){return _ref.apply(this,arguments);};}();var intervalId=setInterval(checkIframe,100);});};","map":{"version":3,"sources":["/Users/sallen/Documents/GitHub/sdk_wayfinder/src/mp/GetSDK.ts"],"names":["SDK_VERSION","GetSDK","elementId","applicationKey","Promise","resolve","reject","checkIframe","iframe","HTMLIFrameElement","document","getElementById","contentWindow","sdkWindow","MP_SDK","clearInterval","intervalId","sdk","connect","setInterval"],"mappings":"qQAEA,GAAMA,CAAAA,WAAW,CAAG,KAApB,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAASC,SAAT,CAAgDC,cAAhD,CAAwF,CAC5G,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAASC,OAAT,CAAkBC,MAAlB,CAA0B,CAC3C,GAAMC,CAAAA,WAAW,0FAAG,4JACdC,MADc,CACL,IADK,CAElB,GAAIN,SAAS,WAAYO,CAAAA,iBAAzB,CAA4C,CAC1CD,MAAM,CAAGN,SAAT,CACD,CAFD,IAGK,CACHM,MAAM,CAAGE,QAAQ,CAACC,cAAT,CAAwBT,SAAxB,CAAT,CACD,CAPiB,IASdM,MATc,+CAWSA,CAAAA,MAAM,CAACI,aAXhB,QAWVC,SAXU,eAWsDC,MAXtD,CAYhB,GAAID,SAAJ,CAAe,CACbE,aAAa,CAACC,UAAD,CAAb,CACMC,GAFO,CAEDJ,SAAS,CAACK,OAAV,CAAkBV,MAAlB,CAA0BL,cAA1B,CAA0CH,WAA1C,CAFC,CAGbK,OAAO,CAACY,GAAD,CAAP,CACD,CAhBe,sDAAH,kBAAXV,CAAAA,WAAW,0CAAjB,CAmBA,GAAMS,CAAAA,UAAU,CAAGG,WAAW,CAACZ,WAAD,CAAc,GAAd,CAA9B,CACD,CArBM,CAAP,CAsBD,CAvBM","sourcesContent":["import { MpSdk, ShowcaseEmbedWindow } from './sdk';\n\nconst SDK_VERSION = '3.2';\n\n/**\n * Gets a reference to the SDK. Use this if you want to do SDK stuff.\n * @param {string | HTMLIFrameElement} elementId ID of the iframe or the iframe element itself\n * @param {string} applicationKey Your API key \n * @returns Promise of MpSdk reference\n */\nexport const GetSDK = function(elementId: string | HTMLIFrameElement, applicationKey: string): Promise<MpSdk> {\n  return new Promise(function(resolve, reject) {\n    const checkIframe = async function() {\n      let iframe = null;\n      if (elementId instanceof HTMLIFrameElement) {\n        iframe = elementId as HTMLIFrameElement;\n      }\n      else {\n        iframe = document.getElementById(elementId) as HTMLIFrameElement;\n      }\n\n      if (iframe) {\n        // sometimes this is undefined for some reason, so check for it\n        const sdkWindow = (await iframe.contentWindow as ShowcaseEmbedWindow).MP_SDK;\n        if (sdkWindow) {\n          clearInterval(intervalId);\n          const sdk = sdkWindow.connect(iframe, applicationKey, SDK_VERSION);\n          resolve(sdk);\n        }\n      }\n    };\n    const intervalId = setInterval(checkIframe, 100);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}