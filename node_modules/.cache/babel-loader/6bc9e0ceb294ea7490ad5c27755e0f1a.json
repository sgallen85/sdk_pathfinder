{"ast":null,"code":"var _jsxFileName = \"/Users/sallen/Documents/GitHub/sdk_wayfinder/src/app/App.tsx\";\nimport React, { Component } from 'react';\nimport { GetSDK } from '../mp/GetSDK';\nimport './App.scss';\nimport Frame from './Frame';\nimport Menu from './ui/Menu';\nimport MenuButton from './ui/MenuButton';\nimport Pathfinder from './Pathfinder';\nimport Translator from './Translator';\nimport { initComponents } from './sdk-components';\nimport { pathRendererType } from './sdk-components/PathRenderer';\nimport { cameraControllerType } from './sdk-components/CameraController';\nimport { sweepIdToPoint } from './utils';\nimport { sweepAliases } from './sweepAliases';\nimport ControlsOverlay from './ui/overlay/ControlsOverlay';\nimport FlyModeButton from './ui/overlay/FlyModeButton';\nimport IconButton from './reusables/icon-button/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultUrlParams = {\n  m: 'GycExKiYVFp',\n  applicationKey: 'q44m20q8yk81yi0qgixrremda',\n  title: '0',\n  qs: '1',\n  hr: '0',\n  brand: '0',\n  help: '0',\n  play: '1'\n};\n/**\n * This is the top level class for the app. It handles API key, model ID, and url stuff,\n * and holds references to objects/modules/components for object composition.\n * Do non-initializing SDK and UI stuff in other components/files.\n */\n\nexport default class App extends Component {\n  // the url source for the sdk\n  // the node for the PathRenderer component\n  // human-readable alias for sweeps, if available\n  // the node for the CameraController component\n  // CameraConroller component\n  constructor(props) {\n    super(props);\n    this.src = void 0;\n    this.urlLang = null;\n    this.sdk = void 0;\n    this.pathNode = void 0;\n    this.pathfinder = void 0;\n    this.sweepAlias = void 0;\n    this.flyNode = void 0;\n    this.camCon = void 0;\n\n    this.onOptionSelect = id => {\n      if (id === this.state.selectedSweepId) {\n        this.clearSelection();\n      } else {\n        this.setState({\n          selectedSweepId: id\n        });\n      }\n    };\n\n    this.clearSelection = () => {\n      if (this.pathNode) this.pathNode.stop();\n      this.setState({\n        path: undefined,\n        selectedSweepId: undefined\n      });\n    };\n\n    this.toggleFlyMode = async () => {\n      const {\n        flyModeEnabled\n      } = this.state;\n      this.setState({\n        flyModeEnabled: !flyModeEnabled,\n        flyU: 0\n      }, async () => {\n        if (flyModeEnabled) {\n          await this.exitFly();\n        } else {\n          await this.initFly();\n        }\n      });\n    };\n\n    this.initFly = async () => {\n      const {\n        sdk\n      } = this;\n      const {\n        path\n      } = this.state;\n\n      if (sdk && path) {\n        if (this.flyNode) this.flyNode.stop();\n        this.flyNode = await sdk.Scene.createNode();\n        this.camCon = this.flyNode.addComponent(cameraControllerType, {\n          changeUCallback: u => this.setState({\n            flyU: u\n          })\n        });\n        const cam = this.flyNode.addComponent('mp.camera', {\n          enabled: true\n        });\n        this.camCon.bind('curve', path, 'curve');\n        cam.bind('camera', this.camCon, 'camera');\n        this.flyNode.start(); // orient camera to start of flythrough\n\n        const {\n          position,\n          rotation\n        } = this.camCon.getPoseAt(0);\n        await sdk.Mode.moveTo(sdk.Mode.Mode.DOLLHOUSE, {\n          position,\n          rotation: {\n            x: rotation.x * 180 / Math.PI,\n            y: rotation.y * 180 / Math.PI\n          }\n        }); // start flythough\n\n        this.setState({\n          flyU: 0\n        });\n        this.playFly();\n      }\n    };\n\n    this.exitFly = async () => {\n      const {\n        sdk,\n        flyNode\n      } = this;\n      if (flyNode) flyNode.stop();\n      if (sdk) sdk.Mode.moveTo(sdk.Mode.Mode.INSIDE);\n      this.setState({\n        flyModePlaying: false\n      });\n    };\n\n    this.playFly = () => {\n      if (this.camCon) this.camCon.inputs.enabled = true;\n      this.setState({\n        flyModePlaying: true\n      });\n    };\n\n    this.pauseFly = () => {\n      if (this.camCon) this.camCon.inputs.enabled = false;\n      this.setState({\n        flyModePlaying: false\n      });\n    };\n\n    this.setFlyU = u => {\n      if (this.camCon) this.camCon.setU(u);\n    };\n\n    this.toggleMenu = () => {\n      this.setState({\n        menuEnabled: !this.state.menuEnabled\n      });\n    };\n\n    const queryString = this.handleUrlParams();\n    this.src = `${process.env.PUBLIC_URL}/bundle/showcase.html?${queryString}`;\n    this.state = {\n      lang: this.urlLang ? this.urlLang : 'en',\n      sweepData: [],\n      menuEnabled: true,\n      flyModeEnabled: false,\n      flyU: 0,\n      flyModePlaying: false\n    };\n  }\n  /**\n   * Parses the current url params and combines them with the default params, updating when necessary.\n   * @returns url param query string (without `?`), ready to be pasted directly into the url\n   */\n\n\n  handleUrlParams() {\n    const params = new URLSearchParams(window.location.search);\n    this.urlLang = params.get('lang');\n\n    for (const [k, v] of Object.entries(defaultUrlParams)) {\n      if (!params.has(k)) {\n        params.append(k, '' + v); // convert v to string\n      }\n    }\n\n    return params.toString();\n  } // --- React methods ---------------------------------------------------------\n\n\n  async componentDidMount() {\n    this.sdk = await GetSDK('showcase', defaultUrlParams.applicationKey);\n    await initComponents(this.sdk); // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    // Add user-generated Mattertags to the default model\n    // In production, this block will be removed\n\n    await this.sdk.Model.getData().then(async data => {\n      if (data.sid === 'GycExKiYVFp') {\n        var _this$sdk;\n\n        const mattertags = [];\n        mattertags.push({\n          label: \"Revitalizing the Great Hall\",\n          description: \"Within the buildingâ€™s Great Hall, new vestibule spaces were created to \" + \"connect the main circulation corridor to new restrooms. Elevator lobbies and \" + \"office suite entrances were treated as extensions of the original McKim design, \" + \"with matching marble flooring and wall base, and stained oak millwork-encased \" + \"openings.\",\n          anchorPosition: {\n            x: 16.55,\n            y: 1.28 - 1.5,\n            z: 6.69\n          },\n          stemVector: {\n            x: 0,\n            y: 1,\n            z: 0\n          }\n        });\n        await ((_this$sdk = this.sdk) === null || _this$sdk === void 0 ? void 0 : _this$sdk.Mattertag.add(mattertags));\n      }\n    }); // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    const {\n      lang\n    } = this.state;\n    await this.sdk.Model.getData().then(data => {\n      const sweepData = data.sweeps;\n      this.pathfinder = new Pathfinder(sweepData);\n      this.setState({\n        sweepData: sweepData\n      });\n      this.sweepAlias = sweepAliases[data.sid];\n    });\n    this.sdk.Sweep.data.subscribe({\n      onCollectionUpdated: collection => {\n        this.setState({\n          sweepMap: collection\n        });\n      }\n    });\n    this.sdk.Floor.data.subscribe({\n      onCollectionUpdated: collection => {\n        this.setState({\n          floorMap: collection\n        });\n      }\n    });\n    this.sdk.Sweep.current.subscribe(currentSweep => {\n      if (currentSweep.sid) {\n        console.log(currentSweep.sid, currentSweep.position);\n        this.setState({\n          currSweepId: currentSweep.sid\n        });\n      }\n    }); // translate all mattertags, if not English\n\n    if (lang !== 'en') this.translateMattertags(lang);\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    const {\n      currSweepId,\n      selectedSweepId\n    } = this.state; // only update path if sweep state changes\n\n    (currSweepId !== prevState.currSweepId || selectedSweepId !== prevState.selectedSweepId) && this.handlePath();\n  } // --- SDK methods -----------------------------------------------------------\n\n\n  async handlePath() {\n    const {\n      currSweepId,\n      selectedSweepId,\n      sweepMap\n    } = this.state;\n    const {\n      sdk,\n      pathfinder\n    } = this;\n\n    if (sdk && sweepMap && currSweepId && selectedSweepId && pathfinder) {\n      const path = await pathfinder.findShortestPath(currSweepId, selectedSweepId);\n      if (!path) return;\n      if (this.pathNode) this.pathNode.stop();\n      this.pathNode = await sdk.Scene.createNode();\n      this.setState({\n        path: path.length > 1 ? this.pathNode.addComponent(pathRendererType, {\n          path: path.map(id => sweepIdToPoint(id, sweepMap)),\n          opacity: 0.7,\n          radius: 0.12,\n          stepMultiplier: 10\n        }) : undefined\n      });\n      this.pathNode.start();\n    }\n  }\n\n  async translateMattertags(lang) {\n    const {\n      sdk\n    } = this;\n\n    if (sdk && lang) {\n      const Trans = new Translator(lang);\n      const mattertagData = await sdk.Mattertag.getData();\n\n      for (let i = 0; i < mattertagData.length; i++) {\n        const {\n          sid,\n          label,\n          description,\n          media\n        } = mattertagData[i];\n\n        const callBack = newTexts => {\n          const [newLabel, newDescription] = newTexts;\n          sdk.Mattertag.editBillboard(sid, {\n            label: newLabel,\n            description: newDescription,\n            media\n          });\n        };\n\n        Trans.translate([label, description], callBack);\n      }\n\n      Trans.checkUsage();\n    }\n  }\n\n  async changeLang(lang) {\n    this.setState({\n      lang\n    });\n    this.translateMattertags(lang);\n  } // --- Render ----------------------------------------------------------------\n\n\n  render() {\n    const {\n      lang,\n      currSweepId,\n      selectedSweepId,\n      sweepData,\n      menuEnabled,\n      flyModeEnabled,\n      flyU,\n      path,\n      flyModePlaying,\n      floorMap\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"frame-container\",\n        children: [/*#__PURE__*/_jsxDEV(Frame, {\n          src: this.src,\n          disableClicks: flyModeEnabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"overlay-container\",\n          children: path && (flyModeEnabled ? /*#__PURE__*/_jsxDEV(ControlsOverlay, {\n            playing: flyModePlaying,\n            onPlay: this.playFly,\n            onPause: this.pauseFly,\n            onExit: this.toggleFlyMode,\n            setU: this.setFlyU,\n            u: flyU\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nofly-button-container\",\n            children: [/*#__PURE__*/_jsxDEV(FlyModeButton, {\n              lang: lang,\n              onClick: this.toggleFlyMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: this.clearSelection,\n              icon: \"close\",\n              classes: ['clear-button']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), !menuEnabled && /*#__PURE__*/_jsxDEV(MenuButton, {\n        onClick: this.toggleMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), menuEnabled && /*#__PURE__*/_jsxDEV(Menu, {\n        lang: lang,\n        currSweepId: currSweepId,\n        selectedSweepId: selectedSweepId,\n        sweepData: sweepData,\n        sweepAlias: this.sweepAlias,\n        floorMap: floorMap,\n        onChange: this.onOptionSelect,\n        onClose: this.toggleMenu,\n        onChangeLang: e => this.changeLang(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/sallen/Documents/GitHub/sdk_wayfinder/src/app/App.tsx"],"names":["React","Component","GetSDK","Frame","Menu","MenuButton","Pathfinder","Translator","initComponents","pathRendererType","cameraControllerType","sweepIdToPoint","sweepAliases","ControlsOverlay","FlyModeButton","IconButton","defaultUrlParams","m","applicationKey","title","qs","hr","brand","help","play","App","constructor","props","src","urlLang","sdk","pathNode","pathfinder","sweepAlias","flyNode","camCon","onOptionSelect","id","state","selectedSweepId","clearSelection","setState","stop","path","undefined","toggleFlyMode","flyModeEnabled","flyU","exitFly","initFly","Scene","createNode","addComponent","changeUCallback","u","cam","enabled","bind","start","position","rotation","getPoseAt","Mode","moveTo","DOLLHOUSE","x","Math","PI","y","playFly","INSIDE","flyModePlaying","inputs","pauseFly","setFlyU","setU","toggleMenu","menuEnabled","queryString","handleUrlParams","process","env","PUBLIC_URL","lang","sweepData","params","URLSearchParams","window","location","search","get","k","v","Object","entries","has","append","toString","componentDidMount","Model","getData","then","data","sid","mattertags","push","label","description","anchorPosition","z","stemVector","Mattertag","add","sweeps","Sweep","subscribe","onCollectionUpdated","collection","sweepMap","Floor","floorMap","current","currentSweep","console","log","currSweepId","translateMattertags","componentDidUpdate","_prevProps","prevState","handlePath","findShortestPath","length","map","opacity","radius","stepMultiplier","Trans","mattertagData","i","media","callBack","newTexts","newLabel","newDescription","editBillboard","translate","checkUsage","changeLang","render","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { GetSDK } from '../mp/GetSDK';\nimport { Dictionary, MpSdk, Sweep } from '../mp/sdk';\nimport './App.scss';\nimport Frame from './Frame';\nimport Menu from './ui/Menu';\nimport MenuButton from './ui/MenuButton';\nimport Pathfinder from './Pathfinder';\nimport Translator from './Translator';\nimport { initComponents } from './sdk-components';\nimport { pathRendererType } from './sdk-components/PathRenderer';\nimport { cameraControllerType } from './sdk-components/CameraController';\nimport { sweepIdToPoint } from './utils';\nimport { SweepAlias, sweepAliases } from './sweepAliases';\nimport ControlsOverlay from './ui/overlay/ControlsOverlay';\nimport FlyModeButton from './ui/overlay/FlyModeButton';\nimport IconButton from './reusables/icon-button/IconButton';\n\nexport interface Sdk extends MpSdk {\n  Scene?: any;\n}\n\ninterface AppState {\n  lang: string;\n  currSweepId?: string;\n  selectedSweepId?: string;\n  sweepData: Sweep.SweepData[]; // put in state because changes should trigger rerender\n  sweepMap?: Dictionary<MpSdk.Sweep.ObservableSweepData>;\n  path?: any; // put in state so path visibility updates trigger rerender\n  menuEnabled: boolean;\n  flyModeEnabled: boolean;\n  flyU: number; // integer in [0, 1] indicating position in flythrough\n  flyModePlaying: boolean;\n  floorMap?: Dictionary<MpSdk.Floor.FloorData>;\n}\n\nconst defaultUrlParams: any = {\n  m: 'GycExKiYVFp',\n  applicationKey: 'q44m20q8yk81yi0qgixrremda',\n  title: '0',\n  qs: '1',\n  hr: '0',\n  brand: '0',\n  help: '0',\n  play: '1',\n}\n\n/**\n * This is the top level class for the app. It handles API key, model ID, and url stuff,\n * and holds references to objects/modules/components for object composition.\n * Do non-initializing SDK and UI stuff in other components/files.\n */\nexport default class App extends Component<{}, AppState> {\n\n  private src: string; // the url source for the sdk\n  private urlLang: string | null = null;\n  private sdk?: Sdk;\n\n  private pathNode: any; // the node for the PathRenderer component\n  private pathfinder?: Pathfinder;\n\n  private sweepAlias?: SweepAlias; // human-readable alias for sweeps, if available\n\n  private flyNode: any; // the node for the CameraController component\n  private camCon: any; // CameraConroller component\n\n  constructor(props: any) {\n    super(props);\n    const queryString = this.handleUrlParams();\n    this.src = `${process.env.PUBLIC_URL}/bundle/showcase.html?${queryString}`;\n\n    this.state = {\n      lang: this.urlLang ? this.urlLang : 'en',\n      sweepData: [],\n      menuEnabled: true,\n      flyModeEnabled: false,\n      flyU: 0,\n      flyModePlaying: false,\n    };\n  }\n\n  /**\n   * Parses the current url params and combines them with the default params, updating when necessary.\n   * @returns url param query string (without `?`), ready to be pasted directly into the url\n   */\n  private handleUrlParams(): string {\n    const params = new URLSearchParams(window.location.search);\n    this.urlLang = params.get('lang');\n    for (const [k, v] of Object.entries(defaultUrlParams)) {\n      if (!params.has(k)) {\n        params.append(k, ''+v); // convert v to string\n      }\n    }\n    return params.toString();\n  }\n\n  // --- React methods ---------------------------------------------------------\n\n  public async componentDidMount() {\n    \n    this.sdk = await GetSDK('showcase', defaultUrlParams.applicationKey);\n    await initComponents(this.sdk);\n\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    // Add user-generated Mattertags to the default model\n    // In production, this block will be removed\n    await this.sdk.Model.getData().then( async (data) => {\n      if (data.sid === 'GycExKiYVFp') {\n        const mattertags = [];\n        mattertags.push(\n          {\n            label: \"Revitalizing the Great Hall\",\n            description: \"Within the buildingâ€™s Great Hall, new vestibule spaces were created to \"+\n              \"connect the main circulation corridor to new restrooms. Elevator lobbies and \"+\n              \"office suite entrances were treated as extensions of the original McKim design, \"+\n              \"with matching marble flooring and wall base, and stained oak millwork-encased \"+\n              \"openings.\",\n            anchorPosition: {x: 16.55, y: 1.28-1.5, z: 6.69},\n            stemVector: { x: 0, y: 1, z: 0 },\n          }\n        );\n        await this.sdk?.Mattertag.add(mattertags);\n      }\n    });\n    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    const { lang } = this.state;\n\n    await this.sdk.Model.getData().then( (data) => {\n      const sweepData = data.sweeps;\n      this.pathfinder = new Pathfinder(sweepData);\n      this.setState({\n        sweepData: sweepData,\n      });\n      this.sweepAlias = sweepAliases[data.sid];\n    });\n\n    this.sdk.Sweep.data.subscribe({\n      onCollectionUpdated: (collection: Dictionary<MpSdk.Sweep.ObservableSweepData>) => {\n        this.setState({\n          sweepMap: collection\n        });\n      },\n    });\n\n    this.sdk.Floor.data.subscribe({\n      onCollectionUpdated: (collection: Dictionary<MpSdk.Floor.FloorData>) => {\n        this.setState({\n          floorMap: collection,\n        });\n      }\n    })\n\n    this.sdk.Sweep.current.subscribe((currentSweep: any) => {\n      if (currentSweep.sid) {\n        console.log(currentSweep.sid, currentSweep.position);\n        this.setState({currSweepId: currentSweep.sid,});\n      }\n    });\n\n    // translate all mattertags, if not English\n    if (lang !== 'en')\n      this.translateMattertags(lang);\n  }\n\n  public componentDidUpdate(_prevProps: any, prevState: AppState) {\n    const { currSweepId, selectedSweepId } = this.state;\n\n    // only update path if sweep state changes\n    (currSweepId !== prevState.currSweepId ||\n    selectedSweepId !== prevState.selectedSweepId) &&\n    this.handlePath();\n  }\n\n  // --- SDK methods -----------------------------------------------------------\n\n  private onOptionSelect = (id: string) => {\n    if (id === this.state.selectedSweepId) {\n      this.clearSelection();\n    } else {\n      this.setState({\n        selectedSweepId: id,\n      });\n    }\n  }\n\n  private async handlePath() {\n    const { currSweepId, selectedSweepId, sweepMap } = this.state;\n    const { sdk, pathfinder } = this;\n\n    if (sdk && sweepMap && currSweepId && selectedSweepId && pathfinder) {\n      const path = await pathfinder.findShortestPath(currSweepId, selectedSweepId);\n      if (!path) return;\n      if (this.pathNode) this.pathNode.stop();\n      this.pathNode = await sdk.Scene.createNode();\n      this.setState ({\n        path: path.length > 1 ? this.pathNode.addComponent(pathRendererType, {\n          path: path.map(id => sweepIdToPoint(id, sweepMap)),\n          opacity: 0.7,\n          radius: 0.12,\n          stepMultiplier: 10,\n        }) : undefined,\n      });\n      this.pathNode.start();\n    }\n  }\n\n  private clearSelection = () => {\n    if (this.pathNode) this.pathNode.stop();\n    this.setState({\n      path: undefined,\n      selectedSweepId: undefined,\n    });\n  }\n\n  private toggleFlyMode = async () => {\n    const { flyModeEnabled } = this.state;\n    this.setState({\n      flyModeEnabled: !flyModeEnabled,\n      flyU: 0,\n    }, async () => {\n      if (flyModeEnabled) {\n        await this.exitFly();\n      } else {\n        await this.initFly();\n      }\n    });\n  };\n\n  private initFly = async () => {\n    const { sdk } = this;\n    const { path } = this.state;\n\n    if (sdk && path) {\n      if (this.flyNode) this.flyNode.stop();\n      this.flyNode = await sdk.Scene.createNode();\n      this.camCon = this.flyNode.addComponent(cameraControllerType, {\n        changeUCallback: (u: number) => this.setState({flyU: u}),\n      });\n      const cam = this.flyNode.addComponent('mp.camera', {\n        enabled: true,\n      });\n      this.camCon.bind('curve', path, 'curve');\n      cam.bind('camera', this.camCon, 'camera');\n      this.flyNode.start();\n\n      // orient camera to start of flythrough\n      const { position, rotation } = this.camCon.getPoseAt(0);\n      await sdk.Mode.moveTo(sdk.Mode.Mode.DOLLHOUSE, {\n        position,\n        rotation: {x: rotation.x*180/Math.PI, y: rotation.y*180/Math.PI},\n      });\n\n      // start flythough\n      this.setState({flyU: 0});\n      this.playFly();\n    }\n  };\n\n  private exitFly = async () => {\n    const { sdk, flyNode } = this;\n    if (flyNode) flyNode.stop();\n    if (sdk) sdk.Mode.moveTo(sdk.Mode.Mode.INSIDE);\n    this.setState({ flyModePlaying: false, });\n  };\n\n  private playFly = () => {\n    if (this.camCon) this.camCon.inputs.enabled = true;\n    this.setState({ flyModePlaying: true, });\n  };\n  private pauseFly = () => {\n    if (this.camCon) this.camCon.inputs.enabled = false;\n    this.setState({ flyModePlaying: false, });\n  };\n  private setFlyU = (u: number) => {if (this.camCon) this.camCon.setU(u)};\n\n  private toggleMenu = () => {\n    this.setState({\n      menuEnabled: !this.state.menuEnabled,\n    });\n  }\n\n  private async translateMattertags(lang: string) {\n    const { sdk } = this;\n\n    if (sdk && lang) {\n      const Trans = new Translator(lang);\n      const mattertagData = await sdk.Mattertag.getData();\n      for (let i=0; i<mattertagData.length; i++) {\n        const { sid, label, description, media } = mattertagData[i];\n        const callBack = (newTexts: string[]) => {\n          const [ newLabel, newDescription] = newTexts;\n          sdk.Mattertag.editBillboard(sid, {\n            label: newLabel, \n            description: newDescription, \n            media,\n          });\n        };\n        Trans.translate([label, description], callBack);\n      }\n      Trans.checkUsage();\n    }\n  }\n\n  private async changeLang(lang: string) {\n    this.setState({lang});\n    this.translateMattertags(lang);\n  }\n\n  // --- Render ----------------------------------------------------------------\n\n  public render() {\n    const {\n      lang,\n      currSweepId,\n      selectedSweepId,\n      sweepData,\n      menuEnabled,\n      flyModeEnabled,\n      flyU,\n      path,\n      flyModePlaying,\n      floorMap,\n    } = this.state;\n\n    return (\n      <div className='app'>\n        <div id='frame-container'>\n          <Frame src={this.src} disableClicks={flyModeEnabled} />\n          <div id='overlay-container'>\n            {/* Put all showcase overlay components here */}\n            { path && (\n              flyModeEnabled ?\n              <ControlsOverlay\n                playing={flyModePlaying}\n                onPlay={this.playFly}\n                onPause={this.pauseFly}\n                onExit={this.toggleFlyMode}\n                setU={this.setFlyU}\n                u={flyU}\n              /> \n              :\n              <div className='nofly-button-container'>\n                <FlyModeButton\n                  lang={lang}\n                  onClick={this.toggleFlyMode} \n                />\n                <IconButton onClick={this.clearSelection} icon='close' classes={['clear-button']} />\n            </div>\n            )}\n          </div>\n        </div>\n        { !menuEnabled &&\n          <MenuButton onClick={this.toggleMenu} />\n        }\n        { menuEnabled &&\n          <Menu\n            lang={lang}\n            currSweepId={currSweepId}\n            selectedSweepId={selectedSweepId}\n            sweepData={sweepData}\n            sweepAlias={this.sweepAlias}\n            floorMap={floorMap}\n            onChange={this.onOptionSelect}\n            onClose={this.toggleMenu}\n            onChangeLang={(e) => this.changeLang(e.target.value)}\n          />\n        }\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}