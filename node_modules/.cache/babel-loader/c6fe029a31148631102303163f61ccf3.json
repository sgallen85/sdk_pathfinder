{"ast":null,"code":"import _classCallCheck from\"/Users/sallen/Documents/GitHub/sdk_wayfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sallen/Documents/GitHub/sdk_wayfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/sallen/Documents/GitHub/sdk_wayfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sallen/Documents/GitHub/sdk_wayfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{clamp}from'../../utils';import'./ProgressBar.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PROGRESS_BAR_THUMB_SIZE='14px';var ProgressBar=/*#__PURE__*/function(_Component){_inherits(ProgressBar,_Component);var _super=_createSuper(ProgressBar);function ProgressBar(props){var _this;_classCallCheck(this,ProgressBar);_this=_super.call(this,props);_this.abortController=new AbortController();_this.trackRef=/*#__PURE__*/React.createRef();_this.onMouseDown=function(e){var _this$props=_this.props,onMouseDown=_this$props.onMouseDown,onChange=_this$props.onChange;var ev=e;if(ev.button!==0)return;var value=_this.calculate(ev.clientX);onMouseDown===null||onMouseDown===void 0?void 0:onMouseDown(value);onChange===null||onChange===void 0?void 0:onChange(value);_this.setState({value:value,mouseDown:true});};_this.onMouseUp=function(e){var onMouseUp=_this.props.onMouseUp;var _this$state=_this.state,value=_this$state.value,mouseDown=_this$state.mouseDown;var ev=e;if(ev.button!==0)return;if(mouseDown){onMouseUp===null||onMouseUp===void 0?void 0:onMouseUp(value);}_this.setState({mouseDown:false});};_this.onMouseMove=function(e){var _this$props2=_this.props,scrub=_this$props2.scrub,onChange=_this$props2.onChange;var mouseDown=_this.state.mouseDown;if(!scrub||!mouseDown)return;var ev=e;var value=_this.calculate(ev.clientX);_this.setState({value:value},function(){return onChange===null||onChange===void 0?void 0:onChange(value);});};var initValue=props.initValue;_this.state={value:initValue||0,mouseDown:false};return _this;}_createClass(ProgressBar,[{key:\"componentDidMount\",value:function componentDidMount(){window.addEventListener('mouseup',this.onMouseUp,{signal:this.abortController.signal});window.addEventListener('mousemove',this.onMouseMove,{signal:this.abortController.signal});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.abortController.abort();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(prevProps.overrideValue!==prevState.value&&this.props.overrideValue){this.setState({value:this.props.overrideValue});}}/**\n   * Calculates value of progress bar from mouse position.\n   * @param mx Mouse X position.\n   * @returns Clamped value based on min/max, or current value iff ref is undefined.\n   */},{key:\"calculate\",value:function calculate(mx){var _this$props3=this.props,min=_this$props3.min,max=_this$props3.max;var value=this.state.value;var track=this.trackRef.current;if(!track)return value;var rect=track.getBoundingClientRect();var dx=mx-rect.left;var total=rect.right-rect.left;var frac=dx/total;var range=max-min;return clamp(frac*range,min,max);}},{key:\"render\",value:function render(){var _this$props4=this.props,min=_this$props4.min,max=_this$props4.max,overrideValue=_this$props4.overrideValue,noThumb=_this$props4.noThumb;var _this$state2=this.state,value=_this$state2.value,mouseDown=_this$state2.mouseDown;var frac=(overrideValue||value)/(max-min);var percent=frac*100;return/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-track-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-track\",onMouseDown:this.onMouseDown,ref:this.trackRef,children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-progress\",style:{width:\"\".concat(percent,\"%\")}})})}),!noThumb&&/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-thumb\",style:{width:PROGRESS_BAR_THUMB_SIZE,height:PROGRESS_BAR_THUMB_SIZE,left:\"calc(\".concat(percent,\"% - (\").concat(PROGRESS_BAR_THUMB_SIZE,\"/2))\")},onMouseDown:this.onMouseDown}),/*#__PURE__*/_jsx(\"div\",{className:\"pointer-event-overlay\",style:{position:'fixed',inset:'0',pointerEvents:'all',display:mouseDown?'block':'none'}})]});}}]);return ProgressBar;}(Component);export{ProgressBar as default};","map":{"version":3,"sources":["/Users/sallen/Documents/GitHub/sdk_wayfinder/src/app/ui/overlay/ProgressBar.tsx"],"names":["React","Component","clamp","PROGRESS_BAR_THUMB_SIZE","ProgressBar","props","abortController","AbortController","trackRef","createRef","onMouseDown","e","onChange","ev","button","value","calculate","clientX","setState","mouseDown","onMouseUp","state","onMouseMove","scrub","initValue","window","addEventListener","signal","abort","prevProps","prevState","overrideValue","mx","min","max","track","current","rect","getBoundingClientRect","dx","left","total","right","frac","range","noThumb","percent","width","height","position","inset","pointerEvents","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { clamp } from '../../utils';\nimport './ProgressBar.scss';\n\nconst PROGRESS_BAR_THUMB_SIZE = '14px';\n\ninterface ProgressBarProps {\n  min: number;\n  max: number;\n  initValue?: number;\n  overrideValue?: number;\n  scrub?: boolean;\n  step?: number;\n  noThumb?: boolean;\n  onMouseDown?: (value: number) => void;\n  onMouseUp?: (value: number) => void;\n  onChange?: (value: number) => void;\n}\n\ninterface ProgressBarState {\n  value: number; // will always match overrideValue when passed around (see componentdidUpdate)\n  mouseDown: boolean;\n}\n\nexport default class ProgressBar extends Component<ProgressBarProps, ProgressBarState> {\n  \n  private abortController = new AbortController();\n  private trackRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: ProgressBarProps) {\n    super(props);\n    const { initValue } = props;\n    \n    this.state = {\n      value: initValue || 0,\n      mouseDown: false,\n    }\n  }\n  \n  public componentDidMount() {\n    window.addEventListener(\n      'mouseup',\n      this.onMouseUp,\n      { signal: this.abortController.signal } as AddEventListenerOptions\n    );\n    window.addEventListener(\n      'mousemove',\n      this.onMouseMove,\n      { signal: this.abortController.signal } as AddEventListenerOptions\n    );\n  }\n\n  public componentWillUnmount() {\n    this.abortController.abort();\n  }\n\n  public componentDidUpdate(prevProps: ProgressBarProps, prevState: ProgressBarState) {\n    if (prevProps.overrideValue !== prevState.value && this.props.overrideValue) {\n      this.setState({ value: this.props.overrideValue });\n    }\n  }\n\n  /**\n   * Calculates value of progress bar from mouse position.\n   * @param mx Mouse X position.\n   * @returns Clamped value based on min/max, or current value iff ref is undefined.\n   */\n  private calculate(mx: number): number {\n    const { min, max } = this.props;\n    const { value } = this.state;\n    const track = this.trackRef.current;\n    if (!track) return value;\n\n    const rect = track.getBoundingClientRect();\n    const dx = mx - rect.left;\n    const total = rect.right - rect.left;\n    const frac = dx / total;\n    const range = max - min;\n    \n    return clamp(frac * range, min, max);\n  }\n\n  private onMouseDown = (e: any) => {\n    const { onMouseDown, onChange } = this.props;\n    const ev = e as MouseEvent;\n    if (ev.button !== 0) return;\n\n    const value = this.calculate(ev.clientX);\n    onMouseDown?.(value);\n    onChange?.(value);\n    this.setState({ value: value, mouseDown: true });\n  }\n\n  private onMouseUp = (e: any) => {\n    const { onMouseUp } = this.props;\n    const { value, mouseDown, } = this.state;\n    const ev = e as MouseEvent;\n    if (ev.button !== 0) return;\n\n    if (mouseDown) {\n      onMouseUp?.(value);\n    }\n    this.setState({ mouseDown: false });\n  }\n\n  private onMouseMove = (e: any) => {\n    const { scrub, onChange, } = this.props;\n    const { mouseDown } = this.state;\n    if (!scrub || !mouseDown) return;\n\n    const ev = e as MouseEvent;\n    const value = this.calculate(ev.clientX);\n    this.setState({ value: value }, () => onChange?.(value))\n  }\n\n  public render() {\n    const {\n      min,\n      max,\n      overrideValue,\n      noThumb,\n    } = this.props;\n    const {\n      value,\n      mouseDown\n    } = this.state;\n\n    const frac = (overrideValue || value) / (max - min);\n    const percent = frac * 100;\n\n    return (\n      <div className='progress-bar-container'>\n        <div className='progress-bar-track-container'>\n          <div\n            className='progress-bar-track'\n            onMouseDown={this.onMouseDown}\n            ref={this.trackRef}\n          >\n            <div\n              className='progress-bar-progress'\n              style={{\n                width: `${percent}%`\n              }}\n            ></div>\n          </div>\n        </div>\n        { !noThumb &&\n          <div\n            className='progress-bar-thumb'\n            style={{\n              width: PROGRESS_BAR_THUMB_SIZE,\n              height: PROGRESS_BAR_THUMB_SIZE,\n              left: `calc(${percent}% - (${PROGRESS_BAR_THUMB_SIZE}/2))`,\n            }}\n            onMouseDown={this.onMouseDown}\n          ></div>\n        }\n        {/* Needed so mousemove fires even when over the {pointer-events: none} canvas */}\n        <div className='pointer-event-overlay'\n          style={{\n            position: 'fixed',\n            inset: '0',\n            pointerEvents: 'all',\n            display: mouseDown ? 'block' : 'none',\n          }}\n        ></div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}