{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sallen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sallen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/sallen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import{distance}from'../utils';var PathRenderer=function PathRenderer(){var _this=this;_classCallCheck(this,PathRenderer);this.material=void 0;this.inputs={visible:false,path:[],// positions on path\nradius:0.15,color:0xff3158,opacity:0.5,heightOffset:-1.1,stepMultiplier:5};this.context=void 0;this.outputs={curve:null,distance:0};this.onInit=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var THREE,_this$inputs,path,radius,heightOffset,opacity,color,stepMultiplier,d,points,spline,extrudeSettings,arcShape,extrudeGeometry,pathMesh;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:THREE=_this.context.three;_this$inputs=_this.inputs,path=_this$inputs.path,radius=_this$inputs.radius,heightOffset=_this$inputs.heightOffset,opacity=_this$inputs.opacity,color=_this$inputs.color,stepMultiplier=_this$inputs.stepMultiplier;// check if path is long enough and no undefined points\nif(!(path.length<2||!path.every(function(p){return!!p;}))){_context.next=4;break;}return _context.abrupt(\"return\");case 4:d=0;points=path.map(function(p,i){if(i>0){d+=distance(path[i-1],p);}return new THREE.Vector3(p.x,p.y+heightOffset,p.z);});spline=new THREE.CatmullRomCurve3(points);extrudeSettings={steps:stepMultiplier*path.length,bevelEnabled:false,extrudePath:spline};// Shape to extrude\narcShape=new THREE.Shape().absarc(0,0,radius,0,Math.PI*2,false);extrudeGeometry=new THREE.ExtrudeGeometry(arcShape,extrudeSettings);_this.material=new THREE.MeshBasicMaterial({color:color,transparent:true,opacity:opacity});pathMesh=new THREE.Mesh(extrudeGeometry,_this.material);_this.outputs.objectRoot=pathMesh;_this.outputs.curve=spline;_this.outputs.distance=d;case 15:case\"end\":return _context.stop();}}},_callee);}));this.onEvent=function(_type,_data){};this.onInputsUpdated=function(_previous){};this.onTick=function(_tickDelta){};this.onDestroy=function(){var _this$material;(_this$material=_this.material)===null||_this$material===void 0?void 0:_this$material.dispose();};};export var pathRendererType='sdk-component.pathRenderer';export function PathRendererFactory(){return new PathRenderer();}","map":{"version":3,"sources":["/Users/sallen/Documents/GitHub/sdk_wayfinder/src/app/sdk-components/PathRenderer.ts"],"names":["distance","PathRenderer","material","inputs","visible","path","radius","color","opacity","heightOffset","stepMultiplier","context","outputs","curve","onInit","THREE","three","length","every","p","d","points","map","i","Vector3","x","y","z","spline","CatmullRomCurve3","extrudeSettings","steps","bevelEnabled","extrudePath","arcShape","Shape","absarc","Math","PI","extrudeGeometry","ExtrudeGeometry","MeshBasicMaterial","transparent","pathMesh","Mesh","objectRoot","onEvent","_type","_data","onInputsUpdated","_previous","onTick","_tickDelta","onDestroy","dispose","pathRendererType","PathRendererFactory"],"mappings":"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","sourcesContent":["import { Color, Vector3 } from '../../mp/sdk';\nimport { distance } from '../utils';\n\ninterface PathRendererInputs {\n  visible: boolean;\n  path: Vector3[];\n  radius: number;\n  color: Color | number;\n  opacity: number;\n  heightOffset: number;\n  stepMultiplier: number;\n}\n\ninterface PathRendererOutputs {\n  objectRoot: any;\n  curve: any;\n  distance: number;\n}\n\nclass PathRenderer {\n\n  private material: any;\n\n  private inputs: PathRendererInputs = {\n    visible: false,\n    path: [], // positions on path\n    radius: 0.15,\n    color: 0xff3158,\n    opacity: 0.5,\n    heightOffset: -1.1,\n    stepMultiplier: 5,\n  };\n\n  private context: any;\n\n  private outputs = {\n    curve: null,\n    distance: 0,\n  } as PathRendererOutputs;\n\n  public onInit = async () => {\n\n    const THREE = this.context.three;\n\n    const { path,\n            radius,\n            heightOffset,\n            opacity,\n            color,\n            stepMultiplier } = this.inputs;\n\n    // check if path is long enough and no undefined points\n    if (path.length < 2 || !path.every(p => !!p)) return;\n    \n    let d = 0;\n    const points = path.map((p, i) => {\n      if (i > 0) {\n        d += distance(path[i-1], p);\n      }\n      return new THREE.Vector3(p.x, p.y+heightOffset, p.z);\n    });\n    const spline = new THREE.CatmullRomCurve3(points);\n\n    const extrudeSettings = {\n        steps: stepMultiplier * path.length,\n        bevelEnabled: false,\n        extrudePath: spline,\n    };\n\n    // Shape to extrude\n    const arcShape = new THREE.Shape().absarc(0, 0, radius, 0, Math.PI * 2, false);\n    \n    const extrudeGeometry = new THREE.ExtrudeGeometry( arcShape, extrudeSettings );\n    \n    this.material = new THREE.MeshBasicMaterial({\n        color: color as number,\n        transparent: true,\n        opacity: opacity,\n    });\n\n    const pathMesh = new THREE.Mesh(extrudeGeometry, this.material);\n\n    this.outputs.objectRoot = pathMesh;\n    this.outputs.curve = spline;\n    this.outputs.distance = d;\n  };\n\n  public onEvent = function(_type: any, _data: any) {\n  }\n\n  public onInputsUpdated = function(_previous: any) {\n  };\n\n  public onTick = function(_tickDelta: any) {\n  };\n\n  public onDestroy = () => {\n    this.material?.dispose();\n  };\n}\n\nexport const pathRendererType = 'sdk-component.pathRenderer';\nexport function PathRendererFactory() {\n  return new PathRenderer();\n}"]},"metadata":{},"sourceType":"module"}